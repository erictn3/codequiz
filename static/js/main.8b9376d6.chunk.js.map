{"version":3,"sources":["App.js","components/Question/Question.js","utils/index.js","components/End/End.js","components/Start/Start.js","index.js"],"names":["interval","Question","data","onAnswerUpdate","numberOfQuestions","activeQuestion","onSetActiveQuestion","onSetstep","useState","selected","setSelected","error","setError","radiosWrapper","useRef","useEffect","findCheckedInput","current","querySelector","checked","changeHandler","e","target","value","className","title","ref","choices","map","choice","i","type","name","onChange","onClick","prevState","q","question","a","formatTime","time","Math","floor","End","results","onReset","onAnswersCheck","correctAnswers","setCorrectAnswers","correct","forEach","result","index","answer","length","Start","onQuizStart","App","step","setStep","setActiveQuestion","answers","setAnswers","setTime","clearInterval","setInterval","prevTime","quizData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b9376d6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n// import Logic from './components/Logic';\nimport Question from './components/Question/Question';\n// import Start from './components/Start/Start';\nimport quizData from './data/quiz.json';\nimport End from './components/End/End';\nimport Start from './components/Start/Start';\n\nlet interval;\n\nconst App = () => {\n  const [step, setStep] = useState(1);\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [time, setTime] = useState(0);\n\n  useEffect(() => {\n    if(step ===3 ) {\n      clearInterval(interval);\n    }\n  }, [step]);\n\n  const quizStartHandler = () => {\n    setStep(2);\n    interval = setInterval(() => {\n      setTime(prevTime => prevTime + 1)\n    }, 1000)\n  }\n\n  const resetClickHandler = () => {\n    setActiveQuestion(0);\n    setAnswers([]);\n    setStep(2);\n    setTime(0);\n    interval = setInterval(() => {\n      setTime(prevTime => prevTime + 1)\n    }, 1000);\n  }\n\n  return (\n    <div className=\"App\">\n      {step ===1 && <Start onQuizStart={quizStartHandler} /> }\n      {step ===2 && <Question\n        data={quizData.data[activeQuestion]}\n        onAnswerUpdate={setAnswers}\n        numberOfQuestions={quizData.data.length}\n        activeQuestion={activeQuestion}\n        onSetActiveQuestion={setActiveQuestion}\n        onSetstep={setStep}\n      />}\n      {step ===3 && <End\n        results={answers}\n        data={quizData.data}\n        onReset={resetClickHandler}\n        onAnswersCheck={() => {}}\n        time={time}\n      />}\n    </div>\n  )\n}\n\nexport default App;\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst Question = ({ data, onAnswerUpdate, numberOfQuestions, activeQuestion, onSetActiveQuestion, onSetstep}) => {\r\n\r\n  const [selected, setSelected] = useState('');\r\n  const [error, setError] = useState('');\r\n  const radiosWrapper = useRef();\r\n\r\n  useEffect(() => {\r\n    const findCheckedInput = radiosWrapper.current.querySelector('input:checked');\r\n    if(findCheckedInput) {\r\n      findCheckedInput.checked = false;\r\n    }\r\n  }, [data]);\r\n\r\n  const changeHandler = (e) => {\r\n    setSelected(e.target.value);  \r\n    if(error) {\r\n      setError('');\r\n    }\r\n  }\r\n\r\n  const nextClickHandler = (e) => {\r\n    if(selected === '') {\r\n      return setError('Please select an option');\r\n    }\r\n    onAnswerUpdate(prevState => [...prevState, { q: data.question, a: selected }]);\r\n    setSelected('');\r\n    if(activeQuestion < numberOfQuestions -1) {\r\n      onSetActiveQuestion(activeQuestion +1);\r\n    } else {\r\n      onSetstep(3);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        <div className=\"content\">\r\n          <h2 className=\"mb-5\">{data.title}</h2>\r\n          <div className=\"control\" ref={radiosWrapper}>\r\n            {data.choices.map((choice, i) => (\r\n              <label className=\"radio has-background-light\">\r\n              <input type=\"radio\" name=\"answer\" value={choice} onChange={changeHandler}>\r\n              </input>\r\n              {choice}\r\n            </label>\r\n            ))} \r\n            {error && <div className=\"has-text-danger\">{error}</div>}\r\n            <button className=\"button is-link is-medium is-fullwidth mt-4\" onClick={nextClickHandler}>Next</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Question;\r\n","const formatTime = time => {\r\n  if(time < 60) {\r\n    return time < 10 ? `0${time}s` : `${time}s`;\r\n  } else {\r\n    return Math.floor(time/60) + `m` + (time % 60) + `s`;\r\n  }\r\n}\r\n\r\nexport {\r\n  formatTime\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { formatTime } from '../../utils/';\r\n\r\nconst End = ({ results , data, onReset, onAnswersCheck, time }) => {\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let correct = 0;\r\n    results.forEach((result, index) => {\r\n      if(result.a ===data[index].answer) {\r\n        correct++;\r\n      }\r\n    });\r\n    setCorrectAnswers(correct);\r\n\r\n  })\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-component\">\r\n        <div className=\"content\">\r\n          <h3>Your Results!</h3>\r\n        <p>{correctAnswers} out of {data.length}</p>\r\n          <p><strong>{Math.floor((correctAnswers / data.length)*100)}%</strong></p>\r\n          <p><strong>Your time: </strong>{formatTime(time)}</p>\r\n          <button className=\"button is-info mr-2\" onClick={onAnswersCheck}>Check your answers</button>\r\n          <button className=\"button is-success\" onClick={onReset}>Try again</button>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default End;\r\n","import React from 'react'\r\n\r\nconst Start = ({onQuizStart}) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        <div className=\"content\">\r\n          <h1>Start the quiz</h1>\r\n          <p>Good luck!</p>\r\n          \r\n          <button className=\"button is-info is-medium\" onClick={onQuizStart}>Start</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Start\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}